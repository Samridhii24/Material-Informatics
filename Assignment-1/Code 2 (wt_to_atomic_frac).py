# -*- coding: utf-8 -*-
"""wt_to_atomic_frac.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UYb7PMSZsVuXrezbBOj3oqkF2w91t0Qy
"""

import pandas as pd

# Define atomic masses of elements
atomic_masses = {
    'C': 12.01, 'Si': 28.09, 'Mn': 54.94, 'P': 30.97, 'S': 32.07, 'N': 14.01,
    'Cr': 52.00, 'Cu': 63.55, 'Mo': 95.95, 'Ni': 58.69, 'Fe': 55.85, 'Al': 26.98,
    'Ti': 47.87, 'Nb': 92.91, 'W': 183.84
}

# Load the weight fraction data
data = pd.read_csv('/content/_Composition_wt.frac..csv')

# Convert all composition columns to numeric (handling strings)
composition_columns = [
    'C_max', 'Si_max', 'Mn_max', 'P_max', 'S_max', 'N_max',
    'Cr_max', 'Cu_max', 'Mo_max', 'Ni_max', 'Fe_min'
]
data[composition_columns] = data[composition_columns].apply(pd.to_numeric, errors='coerce')

# Function to calculate atomic fractions
def calculate_atomic_fractions(row):
    elements = ['C', 'Si', 'Mn', 'P', 'S', 'N', 'Cr', 'Cu', 'Mo', 'Ni', 'Fe']
    element_data = {
        'C': row['C_max'],
        'Si': row['Si_max'],
        'Mn': row['Mn_max'],
        'P': row['P_max'],
        'S': row['S_max'],
        'N': row['N_max'],
        'Cr': row['Cr_max'],
        'Cu': row['Cu_max'],
        'Mo': row['Mo_max'],
        'Ni': row['Ni_max'],
        'Fe': row['Fe_min']
    }

    # Total known weight (excluding Fe)
    total_known_weight = sum(
        val for elem, val in element_data.items() if elem != 'Fe' and pd.notnull(val)
    )

    if pd.notnull(total_known_weight):
        element_data['Fe'] = 100 - total_known_weight
    else:
        element_data['Fe'] = row['Fe_min'] if pd.notnull(row['Fe_min']) else 0

    # Total for denominator
    total_atomic_mass = sum(
        (element_data[el] / atomic_masses[el]) for el in elements if pd.notnull(element_data[el]) and element_data[el] > 0
    )

    atomic_fractions = {}
    for el in elements:
        wt_frac = element_data[el]
        if pd.notnull(wt_frac) and wt_frac > 0:
            atomic_fraction = (wt_frac / atomic_masses[el]) / total_atomic_mass
            atomic_fractions[el] = atomic_fraction
        else:
            atomic_fractions[el] = 0.0

    return atomic_fractions

# Convert to DataFrame
atomic_fractions_df = pd.DataFrame(atomic_fraction_data.tolist())

# Save atomic fractions to a new CSV file
atomic_fractions_df.to_csv('atomic_fractions_output.csv', index=False)

# Optional: Print the result
print("Atomic fractions saved to 'atomic_fractions_output.csv'")